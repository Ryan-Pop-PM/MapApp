/*
 * wallaby-core - v1.0.1620
 * https://wallabyjs.com
 * Copyright (c) 2014-2024 Wallaby.js - All Rights Reserved.
 *
 * This source code file is a part of wallaby-core and is a proprietary (closed source) software.

 * IMPORTANT:
 * Wallaby.js is a tool made by software developers for software developers with passion and love for what we do.
 * Pirating the tool is not only illegal and just morally wrong,
 * it is also unfair to other fellow programmers who are using it legally,
 * and very harmful for the tool and its future.
 */
const path=require("path"),fs=require("fs"),tracer=global.$_$tracer,nodeTest=require("node:test"),os=require("os"),messageStart="###wms###",messageEnd="###wme###",originalProcessNodeOptions=process.env.NODE_OPTIONS||"",utils=tracer._utils;let testRunContext;const globalContext={localProjectRoot:path.dirname(global.wallaby._localNodeModules),originalCacheRoot:global.wallaby._originalCacheRoot,normalizedLocalProjectDir:utils.normalizePath(path.dirname(global.wallaby._localNodeModules)),normalizedProjectCacheDir:utils.normalizePath(global.wallaby._originalCacheRoot),normalizedRootPrefix:void 0,abortController:void 0},getPackagePath=e=>{try{var t=utils.resolveModulePathFrom(globalContext.localProjectRoot,""+e),s=t.indexOf(globalContext.localProjectRoot),r=t.indexOf(e,s);return t.substring(0,r+e.length)}catch(e){}},swcPath=getPackagePath("@swc-node/register"),tsNodePath=getPackagePath("ts-node"),tsxPath=getPackagePath("tsx"),esbuildRegisterPath=getPackagePath("esbuild-register"),generateWorkerContext=()=>{var e=Object.assign(Object.assign({},wallaby),{localProjectRoot:globalContext.localProjectRoot,swcPath:swcPath,tsNodePath:tsNodePath,tsxPath:tsxPath,esbuildRegisterPath:esbuildRegisterPath});return delete e.delayStart,delete e.start,delete e._startWhenReceiverIsReady,delete e.testFramework,{globals:{$_$coverage:$_$coverage,$_$baseDir:$_$baseDir,$_$slow:$_$slow,$_$tests:$_$tests,$_$testFiles:$_$testFiles,$_$session:$_$session,$_$traceContext:$_$traceContext,$_$profileRun:$_$profileRun,$_$resolveGetters:$_$resolveGetters,$_$logLimits:$_$logLimits,$_$initialSpecId:$_$initialSpecId,wallaby:e},tracer:{_filePathToFileData:global.$_$tracer._filePathToFileData,_hints:global.$_$tracer._hints,_autoConsoleLog:global.$_$tracer._autoConsoleLog,_captureConsoleLog:global.$_$tracer._captureConsoleLog,_preserveComments:global.$_$tracer._preserveComments,_reportConsoleErrorAsError:global.$_$tracer._reportConsoleErrorAsError,_suppressCallStackEval:global.$_$tracer._suppressCallStackEval,_updateNoMoreThanOneSnapshotPerTestFileRun:global.$_$tracer._updateNoMoreThanOneSnapshotPerTestFileRun,_shouldReportProgramScope:global.$_$tracer._shouldReportProgramScope,_maxLogEntrySize:global.$_$tracer._maxLogEntrySize,_maxTraceSteps:global.$_$tracer._maxTraceSteps,_manualTestRun:global.$_$tracer._manualTestRun,_updateSnapshotsRun:global.$_$tracer._updateSnapshotsRun,_expressionsToEvaluate:global.$_$tracer._expressionsToEvaluate},esmHook:path.join(__dirname,"nodeNativeHook.mjs")}},cleanErrorMessage=t=>{t&&t.startsWith("AssertionError: ")?t=t.substring("AssertionError: ".length):t&&t.startsWith("Error: ")&&(t=t.substring("Error: ".length));var s=["Expected values to be strictly deep-equal:","Expected values to be strictly equal:",'Expected "actual" to be reference-equal to "expected":',"Expected values to be loosely deep-equal:",'Expected "actual" not to be strictly deep-equal to:','Expected "actual" to be strictly unequal to:','Expected "actual" not to be reference-equal to "expected":','Expected "actual" not to be loosely deep-equal to:',"Values have same structure but are not reference-equal:","Expected values not to be loosely deep-equal:"];for(let e=0;e<s.length;e++)t=t.replace(s[e],"");return t=t.replace(/^\s+/,"")};tracer.start(async()=>{const p=global.$_$session;if(global.$_$session!==p)return[];globalContext.abortController&&globalContext.abortController.abort();var e=path.join(os.tmpdir(),"wallaby-run-"+p),t=["uncaughtException","unhandledRejection","beforeExit"];const r={};t.forEach(e=>{r[e]=process.listeners(e)});try{if(tracer.debugLog("Scheduling Node Test Run ("+p+"): "+(new Date).toISOString()),global.$_$session!==p)return[];fs.mkdirSync(path.dirname(e),{recursive:!0}),fs.writeFileSync(e,JSON.stringify(generateWorkerContext())),process.env.WALLABY_TEST_RUN_DATA_FILE=e,process.env.NODE_OPTIONS="--require="+path.join(__dirname,"register.js").replace(/'/g,"\\'")+(originalProcessNodeOptions?" "+originalProcessNodeOptions:""),globalContext.abortController=testRunContext.abortController;for(let e=0;e<testRunContext.testFiles.length;e++){const s=testRunContext.testFiles[e];if(p===global.$_$session){let g=!1,u=!1,d=[],o=[];const a=()=>{let e=Math.min(d.length,o.length);for(;e--;){var t=o.shift(),s=d.shift();if("filteredTest"!==s.type){if("fail"===t.type){s.data.time=Math.round(t.details.duration_ms);var r=t.details.error.cause,a={error:r,passed:!1};switch(a.message=cleanErrorMessage(r?r.name&&r.message?r.name+": "+r.message:r.toString():"empty error"),r.operator){case"deepEqual":case"deepStrictEqual":case"notDeepEqual":case"notDeepStrictEqual":case"notStrictEqual":case"strictEqual":a.showDiff=!0,a.actual=r.actual,a.expected=r.expected}a.stack=r?r.stack:null,s.data.log=s.data.log||[],s.data.log.push(tracer.setAssertionData(a,{message:a.message||"",stack:a.stack,snapshot:!(!a.stack||-1===a.stack.indexOf("TestContext.snapshotAssertion"))}))}else s.data.time=Math.round(t.details.duration_ms);tracer._receiver.send(JSON.stringify(s))}}};await new Promise((l,e)=>{var t=nodeTest.run({files:[s]});t.on("test:fail",e=>{p===global.$_$session&&(o.push(Object.assign({type:"fail"},e)),a())}),t.on("test:pass",e=>{p===global.$_$session&&(o.push(Object.assign({type:"pass"},e)),a())});let n="",i=(t.on("test:stderr",s=>{if(p===global.$_$session)try{var r=s.message&&s.message.toString("utf8")||"";n+=r;let e,t;for(;-1!==(e=n.indexOf(messageStart))&&-1!==(t=n.indexOf(messageEnd));){if(t>e){var a=n.substring(e+messageStart.length,t),o=JSON.parse(a);o&&o.message&&(o.message=o.message.replace(/^Error:(\s*)/,"")),tracer.reportGlobalError((o&&o.message||"")+"\n"+(o&&o.stack||""));try{tracer._receiver.send(a)}catch(e){console.log("Error while processing STDERR message: "+e.message)}}n=n.substring(t+messageEnd.length)}}catch(e){console.log("Error while processing STDERR message: "+e.message),n=""}}),"");const c={};t.on("test:stdout",s=>{if(p===global.$_$session)try{var r=s.message&&s.message.toString("utf8")||"";i+=r;let e,t;for(;-1!==(e=i.indexOf(messageStart))&&-1!==(t=i.indexOf(messageEnd));){if(t>e){var a=i.substring(e+messageStart.length,t);try{var o=JSON.parse(a);"complete"===o.type?(g=!0,u&&l()):"test"===o.type?"executed"!==o.data.status?tracer._receiver.send(a):(c[o.data.id]=o.data.parentTests,d.push(o)):"coverage"===o.type?(o.data=(a=>{if(0===Object.keys(c).length)return a;var e=[];for(let r=0;r<a.ranges.length;r++)e.push(Object.keys(a.ranges[r]).reduce((t,e)=>{const s=a.ranges[r][e];return t[e]=s,c[e]&&c[e].forEach(e=>{t[e]=s}),t},{}));return{id:a.id,ranges:e}})(o.data),tracer._receiver.send(JSON.stringify(o))):"filteredTest"===o.type?(c[o.id]=o.parentTests,d.push(o)):tracer._receiver.send(a)}catch(e){console.log("Error while processing STDOUT message: "+e.message)}}i=i.substring(t+messageEnd.length)}}catch(e){console.log("Error while processing STDOUT message: "+e.message),i=""}}),t.on("test:complete",e=>{var t;p===global.$_$session&&(null!=(t=null==e?void 0:e.details)&&t.error&&null!=(t=null==e?void 0:e.details)&&t.error.cause&&"suite"===(null==(t=null==e?void 0:e.details)?void 0:t.type)&&"subtestsFailed"!==e.details.error.failureType&&tracer.reportGlobalError(e.details.error.cause),e.name!==s||e.file!==s||1!==e.line||1!==e.column||(u=!0,!g))||l()})})}}}catch(e){p===global.$_$session&&(tracer.debugLog("Node Test Error: "+(new Date).toISOString()),e)&&console.error(e.stack)}finally{fs.existsSync(e)&&fs.unlinkSync(e),t.forEach(t=>{var e=process.listeners(t);const s=r[t]||[];e.forEach(e=>{s.includes(e)||process.removeListener(t,e)})}),p===global.$_$session?(tracer.debugLog("Node Test Run Complete ("+p+"): "+(new Date).toISOString()),tracer.resetEnvGlobal(),tracer.complete(),testRunContext=void 0):tracer.debugLog("Node Test Run Abandoned ("+p+"): "+(new Date).toISOString())}}),module.exports={init:function(e){return testRunContext={testFiles:e,childSessionId:1,abortController:new AbortController},{configure:function(){throw new Error("Node Test Run does not support configuration modifications. Please let us know if this is an issue for you at: https:/github.com/wallabyjs/public/issues")}}}};
export function resolve(e,r,t){if("ava"===e){const n=t(e,r,t);if(n&&n.url&&n.url.endsWith("ava/entrypoints/main.mjs"))return{...n,url:`${n.url}?session=${Date.now()}`,shortCircuit:!0}}return t(e,r,t)}export async function load(e,r,t){if(e.indexOf&&-1!==e.indexOf("ava/entrypoints/main.mjs")||e.endsWith("ava/index.js"))return{format:"module",source:'\nconst defaultExport = (...args) => {\n  const runner = global.$_$tracer.avaRunner;\n  const avaModuleExports = runner.test || runner.chain.test || runner.chain;\n  return avaModuleExports.apply(this, args);\n}\n\nconst runner = global.$_$tracer.avaRunner;\nconst initialValue = runner.test || runner.chain.test || runner.chain;\nObject.keys(initialValue).forEach(key => {\n  if (typeof initialValue[key] === "function") {    \n    defaultExport[key] = (...args) => {\n      const runner = global.$_$tracer.avaRunner;\n      const avaModuleExports = runner.test || runner.chain.test || runner.chain;\n      return avaModuleExports[key].apply(this, args);\n    }\n  }\n});\n\nexport default defaultExport;\n\nexport const test = defaultExport;\n',shortCircuit:!0};if(e.indexOf&&-1!==e.indexOf("ava/lib/snapshot-manager.js")){const n=await t(e,r,t);return n.source=n.source.toString().replace("writeFileAtomic(snapPath, buffer, {tmpfileCreated})","global.$_$tracer.writeFileAtomicDone(snapPath, writeFileAtomic(snapPath, buffer, {tmpfileCreated}))").replace("writeFileAtomic(reportPath, reportBuffer, {tmpfileCreated})","global.$_$tracer.writeFileAtomicDone(reportPath, writeFileAtomic(reportPath, reportBuffer, {tmpfileCreated}))"),n}return t(e,r,t)}